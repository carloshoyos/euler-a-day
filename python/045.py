"""
Project Euler Problem 45
========================

Triangle, pentagonal, and hexagonal numbers are generated by the following
formulae:

Triangle     T[n]=n(n+1)/2   1, 3, 6, 10, 15, ...
Pentagonal   P[n]=n(3n-1)/2  1, 5, 12, 22, 35, ...
Hexagonal    H[n]=n(2n-1)    1, 6, 15, 28, 45, ...

It can be verified that T[285] = P[165] = H[143] = 40755.

Find the next triangle number that is also pentagonal and hexagonal.
"""

# two ways to solve: 
# 1- brute force, start with T[286] /  P[165] / H[143] and increment the minimum of the 3 by 1 until you find a triple match
# 2- solve the quadratic equations 


from operator import itemgetter


# get the next number by type 
def getNumber(type, i):
    if type == 't': return i * (i + 1) // 2
    if type == 'p': return i * (i * 3 - 1) // 2
    if type == 'h': return i * (i * 2 - 1)

counter = {'t': 286, 'p':165, 'h':143}
number =  {key:getNumber(key, value) for key, value in counter.items()}

while len(set(number.values()))>1 : # iterate until the 3 numbers are the same 
    minType = min(number, key=number.get)   # get minimum number type
    counter[minType] += 1
    number[minType] = getNumber(minType, counter[minType])  # calculate new number


print(number['t'])