"""
Project Euler Problem 44
========================

Pentagonal numbers are generated by the formula, P[n]=n(3n-1)/2. The first
ten pentagonal numbers are:

               1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P[4] + P[7] = 22 + 70 = 92 = P[8]. However, their
difference, 70 - 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, P[j] and P[k], for which their sum
and difference is pentagonal and D = |P[k] - P[j]| is minimised; what is
the value of D?
"""


# given the difference between pentagonal numbers increases, the minimum difference will be at the lowest numbers.  the first solution found is the correct one, wondering if there could have been an edge case, but euler accepted the solution so that's good enough.
# brute force calculated the first 3000 pentagonal number (and check against a set which is faster)

# also, to scale this problem, use formula P[n+1] - P[n] = 3n+1  (https://en.wikipedia.org/wiki/Pentagonal_number)

import itertools

def pentagonalSet(s):
    return set([n * (3 * n-1)//2 for n in range(1,s)])


pentagonNumbers = pentagonalSet(3000)


for i in itertools.combinations(pentagonNumbers, 2):
    if i[0] + i[1] in pentagonNumbers and abs(i[1] - i[0]) in pentagonNumbers:
        print(abs(i[1] - i[0]))
        break